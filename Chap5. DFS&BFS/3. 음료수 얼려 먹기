/* DFS알고리즘을 이용한 문제 */

#얼음틀 생성
n, m = map(int, input().split())

graph=[]
for i in range(n):
  graph.append(list(map(int,input()))) #2차원 그래프(얼음판 만들기) 완성!

#dfs알고리즘으로 연결된 노드들 모두 방문
def dfs(x,y):
  #얼음판 공간을 벗어나는 경우는 false
  if x<0 or x>=n or y<0 or y>=m:
    return False
  #얼음판이 비어있다면 0->1
  elif graph[x][y]==0:
    graph[x][y]==1
    #현재 위치에서 상하좌우 위치도 호출해서 탐색 
    dfs(x-1,y)
    dfs(x+1,y)
    dfs(x,y-1)
    dfs(x,y+1)
    return True
  #얼음판이 막혀있다면 flase
  elif graph[x][y]==1:
    return False

ice=0
for i in range(n):
  for j in range(m):
    #현재 위치에서 dfs 호출
    if dfs(i,j) == True:
      ice+=1 #연결되어 있으면 아이스크림 개수 추가

print(ice)
  
    
